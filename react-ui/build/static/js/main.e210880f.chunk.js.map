{"version":3,"sources":["services/networker.js","App.js","index.js"],"names":["BASE_URL","process","axios","get","then","res","data","obj","post","id","put","delete","App","useState","persons","setPersons","name","number","newPerson","setNewPerson","notification","setNotification","filter","setFilter","useEffect","Networker","resetNewPerson","doNotify","style","content","setTimeout","notify","color","error","onChangeGenerator","fn","event","target","value","personsDiv","toUpperCase","includes","map","p","idx","key","onClick","person","_","htmlFor","onChange","onSubmit","preventDefault","ep","existingPerson","find","window","confirm","catch","response","concat","disabled","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e210880f.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst BASE_URL = process.env.BASE_URL || `/persons`\n\nconst getAll = () => axios.get(BASE_URL).then(res => res.data)\nconst create = (obj) => axios.post(BASE_URL, obj).then(res => res.data)\nconst update = (id, obj) => axios.put(`${BASE_URL}/${id}`, obj)\n  .then(res => res.data)\nconst del = (id) => axios.delete(`${BASE_URL}/${id}`)\n\nexport default { getAll, create, update, delete: del }\n","import React, { useState, useEffect } from'react'\nimport Networker from './services/networker'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newPerson, setNewPerson ] = useState({ name: '', number: '' })\n  const [ notification, setNotification ] = useState(null)\n  const [ filter, setFilter ] = useState('')\n\n  useEffect( () => {\n    Networker.getAll().then(persons => setPersons(persons))\n  }, [])\n\n  const resetNewPerson = () => setNewPerson({ name: '', number: '' })\n\n  const doNotify = style => content => {\n    setTimeout(() => { setNotification(null) }, 5000)\n    setNotification(<p style={style}>{content}</p>)\n  }\n  const notify = doNotify({ color: \"green\" })\n  const error = doNotify({ color: \"red\" })\n\n  const onSubmit = event => {\n    event.preventDefault()\n\n    const existingPerson = persons.find(({ name }) => name === newPerson.name)\n\n    const replacePerson = ep =>\n      window.confirm(`Do you want to replace ${ep.name}'s phone number ` +\n        `with ${newPerson.number}?`)\n\n    if (!existingPerson) {\n      Networker\n        .create(newPerson)\n        .then(newPerson => {\n          setPersons( persons.concat(newPerson) )\n          notify(`Added ${newPerson.name} to the phone book!`)\n          resetNewPerson()\n        })\n        .catch(({ response }) => error(response.data.error))\n    } else if (replacePerson(existingPerson)) {\n      Networker\n        .update(existingPerson.id, newPerson)\n        .then(newPerson => {\n          setPersons( persons.map(p => p === existingPerson\n            ? newPerson\n            : p) )\n          notify(`Changed ${newPerson.name}'s number to ${newPerson.number}!`)\n          resetNewPerson()\n        })\n        .catch(({ response }) => error(response.data.error))\n    } else {\n      error(`${newPerson.name} already exists!`)\n      resetNewPerson()\n    }\n  }\n\n  const setName = content => setNewPerson({ ...newPerson, name: content })\n  const setNumber = content => setNewPerson({ ...newPerson, number: content })\n  const onChangeGenerator = fn => event => fn(event.target.value)\n\n  const shouldDisable = () => newPerson.name === '' || newPerson.number === ''\n\n  const doDelete = person => () => {\n    Networker.delete(person.id).then(_ => {\n      notify(`Removed ${person.name} from the phonebook.`)\n      setPersons( persons.filter(p => p.id !== person.id) )\n    })\n  }\n\n  const personsDiv = persons\n    .filter(({name}) => name.toUpperCase().includes(filter.toUpperCase()))\n    .map((p, idx) => (\n      <p key={idx}>\n        {p.name} {p.number} <button onClick={doDelete(p)}>delete</button>\n      </p>\n    ))\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"filter\">filter:</label>\n        <input id=\"filter\" value={filter}\n          onChange={onChangeGenerator(setFilter)}/>\n      </div>\n      <h2>Phonebook</h2>\n      {notification}\n      <form onSubmit={onSubmit}>\n        <div>\n          <label htmlFor='name'>name:</label>\n          <input id='name' value={newPerson.name}\n            onChange={onChangeGenerator(setName)} /><br />\n          <label htmlFor='number'>number:</label>\n          <input id='number' value={newPerson.number}\n            onChange={onChangeGenerator(setNumber)} />\n        </div>\n        <div>\n          <button disabled={shouldDisable()} type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      { personsDiv }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}